component: Splunk Distribution of OpenTelemetry .NET
version: 1.11.0
dependencies:
  - name: OpenTelemetry .NET
    source_href: https://github.com/open-telemetry/opentelemetry-dotnet
    version: 1.12.0
    stability: stable
  - name: OpenTelemetry .NET Automatic Instrumentation
    source_href: https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation
    version: 1.12.0
    stability: stable
settings:
  - env: SPLUNK_TRACE_RESPONSE_HEADER_ENABLED
    description: Activated by default. Adds server trace information to HTTP response headers. The default value is `true`.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_EXCLUDE_PROCESSES
    description: "Names of the executable files that you don't want the profiler to instrument. Supports multiple semicolon-separated values, for example: `ReservedProcess.exe;powershell.exe`. Notice that applications launched using dotnet MyApp.dll have process name `dotnet` or `dotnet.exe`. Can't be set using the web.config or app.config files."
    default: ''
    type: string
    category: general
  - env: OTEL_DOTNET_AUTO_TRACES_ENABLED
    description: Long Traces are collected by default. To deactivate trace collection, set the environment variable to `false`. Data from custom or manual instrumentation is not affected.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_METRICS_ENABLED
    description: Metrics are collected by default. To deactivate metric collection, set the environment variable to `false`. Data from custom or manual instrumentation is not affected.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_LOGS_ENABLED
    description: Logs are collected by default. To deactivate log collection, set the environment variable to `false`. Data from custom or manual instrumentation is not affected.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_OPENTRACING_ENABLED
    description: Activates the OpenTracing tracer. The default value is `false`.
    default: 'false'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_NETFX_REDIRECT_ENABLED
    description: Activates immediate redirection of the assemblies used by the automatic instrumentation on the .NET Framework. The default values is `true`. Can't be set using the web.config or app.config files.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_FLUSH_ON_UNHANDLEDEXCEPTION
    description: Controls whether the telemetry data is flushed when an `AppDomain.UnhandledException` event is raised. Set to `true` when experiencing missing telemetry at the same time of unhandled exceptions.
    default: 'false'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_RULE_ENGINE_ENABLED
    description: Activates RuleEngine. The default values is `true`. RuleEngine increases the stability of the instrumentation by validating assemblies for unsupported scenarios.
    default: 'true'
    type: boolean
    category: general
  - env: OTEL_DOTNET_AUTO_FAIL_FAST_ENABLED
    description: Activate to let the process fail when automatic instrumentation can't be executed. This setting is for debugging purposes, don't use it in production environments. The default value is `false`. Can't be set using the web.config or app.config files.
    default: 'false'
    type: boolean
    category: general
  - env: OTEL_LOGS_EXPORTER
    description: 'Comma-separated list of exporters. Supported options: `otlp`, `console`, `none`.'
    default: 'otlp'
    type: string
    category: exporter
  - env: OTEL_METRICS_EXPORTER
    description: 'Comma-separated list of exporters. Supported options: `otlp`, `console`, `none`.'
    default: 'otlp'
    type: string
    category: exporter
  - env: OTEL_TRACES_EXPORTER
    description: 'Comma-separated list of exporters. Supported options: `otlp`, `console`, `none`.'
    default: 'otlp'
    type: string
    category: exporter
  - env: OTEL_EXPORTER_OTLP_ENDPOINT
    description: The URL to where traces, metrics, and logs are sent. The default value is `http://localhost:4318`. Setting a value overrides the `SPLUNK_REALM` environment variable.
    default: ''
    type: string
    category: exporter
  - env: OTEL_EXPORTER_OTLP_LOGS_ENDPOINT
    description: Equivalent to `OTEL_EXPORTER_OTLP_ENDPOINT`, but applies only to logs.
    default: ''
    type: string
    category: exporter
  - env: OTEL_EXPORTER_OTLP_METRICS_ENDPOINT
    description: Equivalent to `OTEL_EXPORTER_OTLP_ENDPOINT`, but applies only to metrics.
    default: ''
    type: string
    category: exporter
  - env: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
    description: Equivalent to `OTEL_EXPORTER_OTLP_ENDPOINT`, but applies only to traces.
    default: ''
    type: string
    category: exporter
  - env: SPLUNK_REALM
    description: The name of your organization's realm, for example, `us0`. When you set the realm, telemetry is sent directly to the ingest endpoint of Splunk Observability Cloud, bypassing the Splunk Distribution of OpenTelemetry Collector.
    default: ''
    type: string
    category: exporter
  - env: SPLUNK_ACCESS_TOKEN
    description: A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Unset by default. Required if you need to send data to the Splunk Observability Cloud ingest endpoint.
    default: ''
    type: string
    category: exporter
  - env: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
    description: The aggregation temporality to use on the basis of instrument kind. The supported options are `Cumulative` for all instrument kinds and `Delta` for Counter, Asynchronous Counter, and Histogram instrument kinds. If you use `Delta` for UpDownCounter and Asynchronous UpDownCounter instrument kinds, the `Cumulative` aggregation temporality will be used. `LowMemory`, from the OpenTelemetry specification, is not supported.
    default: 'Cumulative'
    type: string
    category: exporter
  - env: SPLUNK_PROFILER_ENABLED
    description: Activates AlwaysOn Profiling.
    default: 'false'
    type: boolean
    category: profiling
  - env: SPLUNK_PROFILER_MEMORY_ENABLED
    description: Activates memory profiling.
    default: 'false'
    type: boolean
    category: profiling
  - env: SPLUNK_PROFILER_LOGS_ENDPOINT
    description: The collector endpoint for profiler logs.
    default: 'http://localhost:4318/v1/logs'
    type: string
    category: profiling
  - env: SPLUNK_PROFILER_CALL_STACK_INTERVAL
    description: Frequency with which call stacks are sampled, in milliseconds.
    default: '10000'
    type: int
    category: profiling
  - env: OTEL_PROPAGATORS
    description: Comma-separated list of propagators for the tracer. The default value is `tracecontext,baggage`. Supported values are `b3multi`, `b3`, `tracecontext`, and `baggage`.
    default: 'tracecontext,baggage'
    type: string
    category: trace propagation
  - env: OTEL_TRACES_SAMPLER
    description: Sampler to use. The default value is `parentbased_always_on`. Supported values are `always_on`, `always_off`, `traceidratio`, `parentbased_always_on`, `parentbased_always_off`, and `parentbased_traceidratio`.
    default: 'parentbased_always_on'
    type: string
    category: sampler
  - env: OTEL_TRACES_SAMPLER_ARG
    description: Semicolon-separated list of rules for the `rules` sampler. The default value is `1.0` for `traceidratio`.
    default: '1.0'
    type: string
    category: sampler
  - env: OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED
    description: Activates or deactivates all resource detectors. The default values is `true`.
    default: 'true'
    type: boolean
    category: resource detector
  - env: OTEL_DOTNET_AUTO_{DECTECTOR}_RESOURCE_DETECTOR_ENABLED
    description: Activates or deactivates a specific resource detector, where `{DETECTOR}` is the uppercase identifier of the resource detector you want to activate. Overrides `OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED`.
    default: 'depends on `OTEL_DOTNET_AUTO_RESOURCE_DETECTOR_ENABLED`'
    type: boolean
    category: resource detector
  - env: OTEL_SERVICE_NAME
    description: Name of the service or application you're instrumenting. Takes precedence over the service name defined in the `OTEL_RESOURCE_ATTRIBUTES` variable.
    default: ''
    type: string
    category: instrumentation
  - env: OTEL_RESOURCE_ATTRIBUTES
    description: Comma-separated list of resource attributes added to every reported span. For example, `key1=val1,key2=val2`.
    default: ''
    type: string
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES
    description: Comma-separated list of additional `System.Diagnostics.ActivitySource` names to be added to the tracer at startup. Use it to capture spans from manual instrumentation.
    default: ''
    type: string
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES
    description: Comma-separated list of additional `System.Diagnostics.Metrics.Meter` names to be added to the meter at the startup. Use it to capture custom metrics.
    default: ''
    type: string
    category: instrumentation
  - env: OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT
    description: Maximum number of attributes per span. Default value is unlimited.
    default: ''
    type: int
    category: instrumentation
  - env: OTEL_SPAN_EVENT_COUNT_LIMIT
    description: Maximum number of events per span. Default value is unlimited.
    default: ''
    type: int
    category: instrumentation
  - env: OTEL_SPAN_LINK_COUNT_LIMIT
    description: Maximum number of links per span. Default value is `1000`.
    default: '1000'
    type: int
    category: instrumentation
  - env: OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT
    description: Maximum length of strings for attribute values. Values larger than the limit are truncated. Default value is `1200`. Empty values are treated as infinity.
    default: '1200'
    type: int
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_LEGACY_SOURCES
    description: Comma-separated list of additional legacy source names to be added to the tracer at the startup. Use it to capture `System.Diagnostics.Activity` objects created without using the `System.Diagnostics.ActivitySource` API.
    default: ''
    type: string
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED
    description: Activates or deactivates all instrumentations. Can’t be set using the web.config or app.config files.
    default: 'true'
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED
    description: Activates or deactivates all trace instrumentations. Overrides `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files.
    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_TRACES_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED
    description: Activates or deactivates a specific trace instrumentation, where `{INSTRUMENTATION}` is the case-sensitive name of the instrumentation. Overrides `OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_TRACES_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files. See Supported libraries for a complete list of supported instrumentations and their names.
    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED
    description: Activates or deactivates all metric instrumentations. Overrides `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files.
    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_METRICS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED
    description: Activates or deactivates a specific metric instrumentation, where `{INSTRUMENTATION}` is the case-sensitive name of the instrumentation. Overrides `OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_METRICS_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files. See Supported libraries for a complete list of supported instrumentations and their names.
    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED
    description: Activates or deactivates all log instrumentations. Overrides `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files.
    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_LOGS_{INSTRUMENTATION}_INSTRUMENTATION_ENABLED
    description: >+
      Activates or deactivates a specific log instrumentation, where `{INSTRUMENTATION}` is the case-sensitive name of the instrumentation. Overrides `OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED`. Inherits the value of the `OTEL_DOTNET_AUTO_LOGS_INSTRUMENTATION_ENABLED` environment variable. Can’t be set using the web.config or app.config files. See Supported libraries for a complete list of supported instrumentations and their names.

    default: ''
    type: boolean
    category: instrumentation
  - env: OTEL_DOTNET_AUTO_LOGGER
    description: 'AutoInstrumentation diagnostic logs sink. (supported values: `none`,`file`,`console`.'
    default: 'file'
    type: string
    category: diagnostic logging
  - env: OTEL_LOG_LEVEL
    description: Sets the logging level for instrumentation log messages. Possible values are `none`, `error`, `warn`, `info`, and `debug`. Can't be set using the web.config or app.config files.
    default: 'info'
    type: string
    category: diagnostic logging
  - env: OTEL_DOTNET_AUTO_LOG_DIRECTORY
    description: Directory of the .NET tracer logs. The default value is `/var/log/opentelemetry/dotnet` for Linux, and `%ProgramData%\OpenTelemetry .NET AutoInstrumentation\logs` for Windows. Can't be set using the web.config or app.config files.
    default: ''
    type: string
    category: diagnostic logging
  - env: OTEL_DOTNET_AUTO_TRACES_CONSOLE_EXPORTER_ENABLED
    description: Deprecated. Whether the traces console exporter is activated. It can be configured by `OTEL_TRACES_EXPORTER`.
    default: 'false'
    type: boolean
    category: diagnostic logging
instrumentations:
  - keys:
      - ASPNET
    instrumented_components:
      - name: ASP.NET Framework (.NET Framework)
        supported_versions: See general requirements
    description: MVC / WebApi (Only integrated pipeline mode supported). Metrics requires trace instrumentation.
    stability: beta
    support: community
    dependencies:
      - name: ASP.NET Instrumentation for OpenTelemetry
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AspNet
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.AspNet
        version: 1.12.0-beta.1
        stability: beta
      - name: ASP.NET Telemetry HttpModule for OpenTelemetry
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AspNet.TelemetryHttpModule
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.AspNet.TelemetryHttpModule
        version: 1.12.0-beta.2
        stability: beta
    signals:
      - traces: []
      - metrics:
          - metric_name: http.server.request.duration
            instrument: histogram
            description: Measures the duration of inbound HTTP requests.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
    settings:
      - env: OTEL_DOTNET_AUTO_TRACES_ASPNET_INSTRUMENTATION_CAPTURE_REQUEST_HEADERS
        description: A comma-separated list of HTTP header names. ASP.NET instrumentations will capture HTTP request header values for all configured header names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_AUTO_TRACES_ASPNET_INSTRUMENTATION_CAPTURE_RESPONSE_HEADERS
        description: A comma-separated list of HTTP header names. ASP.NET instrumentations will capture HTTP response header values for all configured header names. Not supported on IIS Classic mode.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_EXPERIMENTAL_ASPNET_DISABLE_URL_QUERY_REDACTION
        description: 'Whether the ASP.NET instrumentation turns off redaction of the `url.query` attribute value. '
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - ASPNETCORE
    instrumented_components:
      - name: ASP.NET Core
        supported_versions: See general requirements
    description: Metrics automatically activates `Microsoft.AspNetCore.Hosting.HttpRequestIn` spans.
    stability: beta
    support: community
    dependencies:
      - name: ASP.NET Core Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-ontrib/tree/main/src/OpenTelemetry.Instrumentation.AspNetCore
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.AspNetCore
        version: 1.12.0
        stability: beta
    signals:
      - traces: []
      - metrics:
          - metric_name: http.server.request.duration
            instrument: histogram
            description: Duration of the inbound HTTP request.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: http.server.active_requests
            instrument: updowncounter
            description: Number of active HTTP server requests.
            category_notes: Custom metric.
          - metric_name: kestrel.active_connections
            instrument: updowncounter
            description: Number of connections that are currently active on the server.
            category_notes: Custom metric.
          - metric_name: kestrel.connection.duration
            instrument: histogram
            description: The duration of connections on the server.
            category_notes: Custom metric.
          - metric_name: kestrel.rejected_connections
            instrument: counter
            description: Number of connections rejected by the server. Connections are rejected when the currently active count exceeds the value configured with MaxConcurrentConnections.
            category_notes: Custom metric.
          - metric_name: kestrel.queued_connections
            instrument: updowncounter
            description: Number of connections that are currently queued and are waiting to start.
            category_notes: Custom metric.
          - metric_name: kestrel.queued_requests
            instrument: updowncounter
            description: Number of HTTP requests on multiplexed connections (HTTP/2 and HTTP/3) that are currently queued and are waiting to start.
            category_notes: Custom metric.
          - metric_name: kestrel.upgraded_connections
            instrument: updowncounter
            description: Number of HTTP connections that are currently upgraded (WebSockets). The number only tracks HTTP/1.1 connections.
            category_notes: Custom metric.
          - metric_name: kestrel.tls_handshake.duration
            instrument: histogram
            description: The duration of TLS handshakes on the server.
            category_notes: Custom metric.
          - metric_name: kestrel.active_tls_handshakes
            instrument: updowncounter
            description: Number of TLS handshakes that are currently in progress on the server.
            category_notes: Custom metric.
          - metric_name: signalr.server.connection.duration
            instrument: histogram
            description: The duration of connections on the server.
            category_notes: Custom metric.
          - metric_name: signalr.server.active_connections
            instrument: updowncounter
            description: Number of connections that are currently active on the server.
            category_notes: Custom metric.
          - metric_name: aspnetcore.routing.match_attempts
            instrument: counter
            description: Number of requests that were attempted to be matched to an endpoint.
            category_notes: Custom metric.
          - metric_name: aspnetcore.diagnostics.exceptions
            instrument: counter
            description: Number of exceptions caught by exception handling middleware.
            category_notes: Custom metric.
          - metric_name: aspnetcore.rate_limiting.active_request_leases
            instrument: updowncounter
            description: Number of HTTP requests that are currently active on the server that hold a rate limiting lease.
            category_notes: Custom metric.
          - metric_name: aspnetcore.rate_limiting.request_lease.duration
            instrument: histogram
            description: The duration of rate limiting leases held by HTTP requests on the server.
            category_notes: Custom metric.
          - metric_name: aspnetcore.rate_limiting.queued_requests
            instrument: updowncounter
            description: Number of HTTP requests that are currently queued, waiting to acquire a rate limiting lease.
            category_notes: Custom metric.
          - metric_name: aspnetcore.rate_limiting.request.time_in_queue
            instrument: histogram
            description: The duration of HTTP requests in a queue, waiting to acquire a rate limiting lease.
            category_notes: Custom metric.
          - metric_name: aspnetcore.rate_limiting.requests
            instrument: counter
            description: Number of requests that tried to acquire a rate limiting lease. Requests could be rejected by global or endpoint rate limiting policies. Or the request could be canceled while waiting for the lease.
            category_notes: Custom metric.
    settings:
      - env: OTEL_DOTNET_AUTO_TRACES_ASPNETCORE_INSTRUMENTATION_CAPTURE_REQUEST_HEADERS
        description: A comma-separated list of HTTP header names. ASP.NET Core instrumentations will capture HTTP request header values for all configured header names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_AUTO_TRACES_ASPNETCORE_INSTRUMENTATION_CAPTURE_RESPONSE_HEADERS
        description: A comma-separated list of HTTP header names. ASP.NET Core instrumentations will capture HTTP response header values for all configured header names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_EXPERIMENTAL_ASPNETCORE_DISABLE_URL_QUERY_REDACTION
        description: Whether the ASP.NET Core instrumentation turns off redaction of the `url.query` attribute value.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - AZURE
    instrumented_components:
      - name: Azure SDK
        supported_versions: '`Azure.` prefixed packages, released after October 1, 2021'
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - ELASTICSEARCH
    instrumented_components:
      - name: Elastic.Clients.Elasticsearch
        supported_versions: 8.0.0 to 8.9.3
    description: Versions 8.10.0 and higher are supported by `Elastic.Transport` instrumentation.
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - ELASTICTRANSPORT
    instrumented_components:
      - name: Elastic.Transport
        supported_versions: 0.4.16 and higher
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - ENTITYFRAMEWORKCORE
    instrumented_components:
      - name: Microsoft.EntityFrameworkCore
        supported_versions: 6.0.12 and higher
    description: Not supported on .NET Framework
    stability: beta
    support: community
    dependencies:
      - name: EntityFrameworkCore Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.EntityFrameworkCore
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.EntityFrameworkCore
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - traces: []
    settings:
      - env: OTEL_DOTNET_AUTO_ENTITYFRAMEWORKCORE_SET_DBSTATEMENT_FOR_TEXT
        description: Whether the Entity Framework Core instrumentation can pass SQL statements through the `db.statement` attribute. Queries might contain sensitive information. If set to `false`, `db.statement` is recorded only for executing stored procedures.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - GRAPHQL
    instrumented_components:
      - name: GraphQL
        supported_versions: 7.5.0 and higher
    description: Not supported on .NET Framework
    stability: beta
    support: third-party
    signals:
      - traces: []
    settings:
      - env: OTEL_DOTNET_AUTO_GRAPHQL_SET_DOCUMENT
        description: Whether the GraphQL instrumentation can pass raw queries through the `graphql.document` attribute. Queries might contain sensitive information.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - GRPCNETCLIENT
    instrumented_components:
      - name: Grpc.Net.Client
        supported_versions: 2.52.0 to 3.0.0
    stability: beta
    support: community
    dependencies:
      - name: Grpc.Net.Client Instrumentation for OpenTelemetry
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.GrpcNetClient
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - traces: []
    settings:
      - env: OTEL_DOTNET_AUTO_TRACES_GRPCNETCLIENT_INSTRUMENTATION_CAPTURE_REQUEST_METADATA
        description: A comma-separated list of gRPC metadata names. Grpc.Net.Client instrumentations will capture gRPC request metadata values for all configured metadata names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_AUTO_TRACES_GRPCNETCLIENT_INSTRUMENTATION_CAPTURE_RESPONSE_METADATA
        description: A comma-separated list of gRPC metadata names. Grpc.Net.Client instrumentations will capture gRPC response metadata values for all configured metadata names.
        default: ''
        type: string
        category: instrumentation
  - keys:
      - HTTPCLIENT
    instrumented_components:
      - name: System.Net.Http.HttpClient
        supported_versions: See general requirements
      - name: System.Net.HttpWebRequest
        supported_versions: See general requirements
    stability: beta
    support: community
    dependencies:
      - name: HttpClient and HttpWebRequest instrumentation for OpenTelemetry
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Http
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.Http
        version: 1.12.0
        stability: beta
    signals:
      - traces: []
      - metrics:
          - metric_name: http.client.request.duration
            instrument: histogram
            description: Duration of HTTP client requests.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: http.client.active_requests
            instrument: updowncounter
            description: Number of outbound HTTP requests that are currently active on the client. Supported only on .NET 8+
            category_notes: Custom metric.
          - metric_name: http.client.open_connections
            instrument: updowncounter
            description: Number of outbound HTTP connections that are currently active or idle on the client. Supported only on .NET 8+
            category_notes: Custom metric.
          - metric_name: http.client.connection.duration
            instrument: histogram
            description: The duration of successfully established outbound HTTP connections. Supported only on .NET 8+
            category_notes: Custom metric.
          - metric_name: http.client.request.time_in_queue
            instrument: histogram
            description: The amount of time requests spent on a queue waiting for an available connection. Supported only on .NET 8+
            category_notes: Custom metric.
          - metric_name: dns.lookup.duration
            instrument: histogram
            description: Measures the time taken to perform a DNS lookup. Supported only on .NET 8+
            category_notes: Custom metric.
    settings:
      - env: OTEL_DOTNET_AUTO_TRACES_HTTP_INSTRUMENTATION_CAPTURE_REQUEST_HEADERS
        description: A comma-separated list of HTTP header names. HTTP Client instrumentations will capture HTTP request header values for all configured header names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_AUTO_TRACES_HTTP_INSTRUMENTATION_CAPTURE_RESPONSE_HEADERS
        description: A comma-separated list of HTTP header names. HTTP Client instrumentations will capture HTTP response header values for all configured header names.
        default: ''
        type: string
        category: instrumentation
      - env: OTEL_DOTNET_EXPERIMENTAL_HTTPCLIENT_DISABLE_URL_QUERY_REDACTION
        description: Whether the HTTP client instrumentation turns off redaction of the `url.full` attribute value.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - KAFKA
    instrumented_components:
      - name: Confluent.Kafka
        supported_versions: 'ARM64: 1.8.2 to 3.0.0. Other platforms: 1.4.0 to 3.0.0'
    stability: beta
    support: community
    signals:
      - traces: []
  - keys:
      - MASSTRANSIT
    instrumented_components:
      - name: MassTransit
        supported_versions: 8.0.0 and higher
    description: Not supported on .NET Framework
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - MONGODB
    instrumented_components:
      - name: MongoDB.Driver.Core
        supported_versions: 2.7.0 to 3.0.0
      - name: MongoDB.Driver.Core
        supported_versions: 3.0.0 to 4.0.0
    description: Not supported on .NET Framework
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - MYSQLCONNECTOR
    instrumented_components:
      - name: MySqlConnector
        supported_versions: 2.0.0 and higher
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - MYSQLDATA
    instrumented_components:
      - name: MySql.Data
        supported_versions: 8.1.0 and higher
    description: Not supported on .NET Framework
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - NPGSQL
    instrumented_components:
      - name: Npgsql
        supported_versions: 6.0.0 and higher
    description: Metrics are not supported on .NET Framework
    stability: beta
    support: third-party
    signals:
      - traces: []
      - metrics:
          - metric_name: db.client.commands.executing
            instrument: updowncounter
            description: The number of currently executing database commands.
            category_notes: Custom metric.
          - metric_name: db.client.commands.failed
            instrument: counter
            description: The number of database commands which have failed.
            category_notes: Custom metric.
          - metric_name: db.client.commands.duration
            instrument: histogram
            description: The duration of database commands, in seconds.
            category_notes: Custom metric.
          - metric_name: db.client.commands.bytes_written
            instrument: counter
            description: The number of bytes written.
            category_notes: Custom metric.
          - metric_name: db.client.commands.bytes_read
            instrument: counter
            description: The number of bytes read.
            category_notes: Custom metric.
          - metric_name: db.client.connections.pending_requests
            instrument: updowncounter
            description: The number of pending requests for an open connection, cumulative for the entire pool.
            category_notes: Custom metric.
          - metric_name: db.client.connections.timeouts
            instrument: counter
            description: The number of connection timeouts that have occurred trying to obtain a connection from the pool.
            category_notes: Custom metric.
          - metric_name: db.client.connections.create_time
            instrument: histogram
            description: The time it took to create a new connection.
            category_notes: Custom metric.
          - metric_name: db.client.connections.usage
            instrument: updowncounter
            description: The number of connections that are currently in state described by the state attribute.
            category_notes: Custom metric.
          - metric_name: db.client.connections.max
            instrument: updowncounter
            description: The maximum number of open connections allowed.
            category_notes: Custom metric.
          - metric_name: db.client.commands.prepared_ratio
            instrument: gauge
            description: The ratio of prepared command executions.
            category_notes: Custom metric.
  - keys:
      - ORACLEMDA
    instrumented_components:
      - name: Oracle.ManagedDataAccess.Core
        supported_versions: 23.4.0 and higher
      - name: Oracle.ManagedDataAccess
        supported_versions: 23.4.0 and higher
    description: Not supported on ARM64
    stability: beta
    support: third-party
    signals:
      - traces: []
    settings:
      - env: OTEL_DOTNET_AUTO_ORACLEMDA_SET_DBSTATEMENT_FOR_TEXT
        description: Whether the Oracle Client instrumentation can pass SQL statements through the `db.statement` attribute. Queries might contain sensitive information. If set to `false`, `db.statement` is recorded only for executing stored procedures.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - NSERVICEBUS
    instrumented_components:
      - name: NServiceBus
        supported_versions: 8.0.0 to 10.0.0
    stability: beta
    support: third-party
    signals:
      - traces: []
      - metrics:
          - metric_name: nservicebus.messaging.successes
            instrument: counter
            description: Number of messages successfully processed by the endpoint.
            category_notes: Custom metric.
          - metric_name: nservicebus.messaging.fetches
            instrument: counter
            description: Number of messages retrieved from the queue by the endpoint.
            category_notes: Custom metric.
          - metric_name: nservicebus.messaging.failures
            instrument: counter
            description: Number of messages unsuccessfully processed by the endpoint.
            category_notes: Custom metric.
  - keys:
      - QUARTZ
    instrumented_components:
      - name: Quartz
        supported_versions: 3.4.0 and higher
    description: Not supported on .NET Framework 4.7.1 and lower
    stability: beta
    support: community
    dependencies:
      - name: QuartzNET Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Quartz
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.Quartz
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - traces: []
  - keys:
      - RABBITMQ
    instrumented_components:
      - name: RabbitMQ.Client
        supported_versions: 6.0.0 and higher
    stability: beta
    support: third-party
    signals:
      - traces: []
  - keys:
      - SQLCLIENT
    instrumented_components:
      - name: Microsoft.Data.SqlClient
        supported_versions: v3.* is not supported on .NET Framework
      - name: System.Data.SqlClient
        supported_versions: 4.8.5 and higher
      - name: System.Data
        supported_versions: Shipped with .NET Framework
    stability: beta
    support: community
    dependencies:
      - name: SqlClient instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.SqlClient
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.SqlClient
        version: 1.12.0-beta.2
        stability: beta
    signals:
      - traces: []
    settings:
      - env: OTEL_DOTNET_AUTO_SQLCLIENT_SET_DBSTATEMENT_FOR_TEXT
        description: Whether the SQL Client instrumentation can pass SQL statements through the `db.statement` attribute. Queries might contain sensitive information. If set to `false`, `db.statement` is recorded only for executing stored procedures. Not supported on .NET Framework for System.Data.SqlClient.
        default: 'false'
        type: boolean
        category: instrumentation
      - env: OTEL_DOTNET_EXPERIMENTAL_SQLCLIENT_ENABLE_TRACE_CONTEXT_PROPAGATION
        description: This is an experimental feature and is subject to change without prior notice. Not supported on .NET Framework. This feature propagates 'traceparent' for 'CommandType.Text' commands utilizing 'SET CONTEXT_INFO'.
        default: 'false'
        type: boolean
        category: instrumentation
  - keys:
      - STACKEXCHANGEREDIS
    instrumented_components:
      - name: StackExchange.Redis
        supported_versions: 2.6.122 to 3.0.0
    description: Not supported on .NET Framework
    stability: beta
    support: community
    dependencies:
      - name: StackExchange.Redis Instrumentation for OpenTelemetry
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.StackExchangeRedis
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.StackExchangeRedis
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - traces: []
  - keys:
      - WCFCLIENT
      - WCFSERVICE
    instrumented_components:
      - name: System.ServiceModel
        supported_versions: 4.7.0 and higher of `System.ServiceModel.Primitives`
    description: Service side not supported on .NET. `WCFCLIENT` for client side instrumentation and `WCFSERVICE` for service side instrumentation
    stability: beta
    support: community
    dependencies:
      - name: WCF Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Wcf
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.Wcf
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - traces: []
  - keys:
      - NETRUNTIME
    instrumented_components:
      - name: .NET runtime
    stability: beta
    support: community
    dependencies:
      - name: Runtime Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Runtime
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.Runtime
        version: 1.12.0
        stability: stable
    signals:
      - metrics:
          - metric_name: dotnet.process.cpu.time
            instrument: counter
            description: CPU time used by the process. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.process.memory.working_set
            instrument: updowncounter
            description: The number of bytes of physical memory mapped to the process context. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.collections
            instrument: counter
            description: The number of garbage collections that have occurred since the process has started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.heap.total_allocated
            instrument: counter
            description: The approximate number of bytes allocated on the managed GC heap since the process started. The returned value does not include any native allocations. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.last_collection.memory.committed_size
            instrument: updowncounter
            description: The amount of committed virtual memory in use by the .NET GC, as observed during the latest garbage collection. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.last_collection.heap.size
            instrument: updowncounter
            description: The managed GC heap size (including fragmentation), as observed during the latest garbage collection. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.last_collection.heap.fragmentation.size
            instrument: updowncounter
            description: The heap fragmentation, as observed during the latest garbage collection. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.gc.pause.time
            instrument: counter
            description: The total amount of time paused in GC since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.jit.compiled_il.size
            instrument: counter
            description: Count of bytes of intermediate language that have been compiled since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.jit.compiled_methods
            instrument: counter
            description: The number of times the JIT compiler (re)compiled methods since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.jit.compilation.time
            instrument: counter
            description: The amount of time the JIT compiler has spent compiling methods since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.thread_pool.thread.count
            instrument: updowncounter
            description: The number of thread pool threads that currently exist. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.thread_pool.work_item.count
            instrument: counter
            description: The number of work items that the thread pool has completed since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.thread_pool.queue.length
            instrument: updowncounter
            description: The number of work items that are currently queued to be processed by the thread pool. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.monitor.lock_contentions
            instrument: counter
            description: The number of times there was contention when trying to acquire a monitor lock since the process started. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.timer.count
            instrument: updowncounter
            description: The number of timer instances that are currently active. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.assembly.count
            instrument: updowncounter
            description: The number of .NET assemblies that are currently loaded. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: dotnet.exceptions
            instrument: counter
            description: The number of exceptions that have been thrown in managed code. Only available for .NET 9.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.collections.count
            instrument: counter
            description: Number of garbage collections since the process started. Only available for .NET 8. and .NET Framework.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.heap.size
            instrument: updowncounter
            description: Heap size, as observed during the last garbage collection. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.heap.fragmentation.size
            instrument: updowncounter
            description: Heap fragmentation, as observed during the last garbage collection. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.objects.size
            instrument: updowncounter
            description: Count of bytes currently in use by live objects in the GC heap. Only available for .NET 8. and .NET Framework.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.allocations.size
            instrument: counter
            description: Count of bytes allocated on the managed GC heap since the process started. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.committed_memory.size
            instrument: updowncounter
            description: Amount of committed virtual memory for the managed GC heap, as observed during the last garbage collection. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.gc.duration
            instrument: counter
            description: The total amount of time paused in GC since the process start. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.monitor.lock_contention.count
            instrument: counter
            description: Contentions count when trying to acquire a monitor lock since the process started. Only available for .NET 8. and .NET Framework.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.thread_pool.threads.count
            instrument: counter
            description: Number of thread pool threads, as observed during the last measurement. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.thread_pool.completed_items.count
            instrument: counter
            description: Number of work items processed by the thread pool since the process started. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.thread_pool.queue.length
            instrument: updowncounter
            description: Number of work items currently queued for processing by the thread pool. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.jit.il_compiled.size
            instrument: counter
            description: Bytes of intermediate language that have been compiled since the process started. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.jit.methods_compiled.count
            instrument: counter
            description: Number of times the JIT compiler compiled a method since the process started. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.jit.compilation_time
            instrument: counter
            description: Amount of time the compiler spent compiling methods since the process started. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.timer.count
            instrument: updowncounter
            description: Number of timer instances currently active. Only available for .NET 8.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.assemblies.count
            instrument: updowncounter
            description: Number of .NET assemblies that are currently loaded. Only available for .NET 8. and .NET Framework.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.runtime.dotnet.exceptions.count
            instrument: counter
            description: Count of exceptions thrown in managed code since the observation started. Only available for .NET 8. and .NET Framework.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
  - keys:
      - PROCESS
    instrumented_components:
      - name: Process
    stability: beta
    support: community
    dependencies:
      - name: Process Instrumentation for OpenTelemetry .NET
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Process
        package_href: https://www.nuget.org/packages/OpenTelemetry.Instrumentation.Process
        version: 1.12.0-beta.1
        stability: beta
    signals:
      - metrics:
          - metric_name: process.memory.usage
            instrument: updowncounter
            description: The amount of physical memory allocated for this process.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.memory.virtual
            instrument: updowncounter
            description: The amount of committed virtual memory for this process.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.cpu.time
            instrument: counter
            description: Total CPU seconds broken down by different states, such as user and system.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.cpu.count
            instrument: updowncounter
            description: Total CPU seconds broken down by different states, such as user and system.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
          - metric_name: process.threads
            instrument: updowncounter
            description: Process threads count.
            category_notes: APM bundled, if data points for the metric contain `telemetry.sdk.language` attribute.
  - keys:
      - ILOGGER
    instrumented_components:
      - name: Microsoft.Extensions.Logging
        supported_versions: 9.0.0 and higher
    description: Not supported on .NET Framework
    stability: beta
    support: community
    signals:
      - logs: []
  - keys:
      - LOG4NET
    instrumented_components:
      - name: log4net
        supported_versions: 2.0.13 to 4.0.0
    stability: beta
    support: community
    signals:
      - logs: []
    settings:
      - env: OTEL_DOTNET_AUTO_LOGS_ENABLE_LOG4NET_BRIDGE
        description: Enables `log4net` bridge. When `log4net` logs bridge is enabled, and `log4net` is configured with at least 1 appender, application logs are exported in OTLP format in addition to being written into their currently configured destination.
        default: 'false'
        type: boolean
        category: instrumentation
resource_detectors:
  - key: AZUREAPPSERVICE
    description: Azure App Service detector.
    attributes:
      - id: azure.app.service.stamp
      - id: cloud.platform
      - id: cloud.provider
      - id: cloud.resource_id
      - id: cloud.region
      - id: deployment.environment
      - id: host.id
      - id: service.instance.id
      - id: service.name
      - id: service.version
    stability: beta
    support: community
    dependencies:
      - name: Resource Detectors for Azure cloud environments
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Azure
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.Azure
        version: 1.12.0-beta.1
        stability: beta
  - key: CONTAINER
    description: Container detector. For example, Docker or Podman containers. Not supported on .NET Framework.
    attributes:
      - id: container.id
    stability: beta
    support: community
    dependencies:
      - name: Container Resource Detectors
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Container
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.Container
        version: 1.12.0-beta.1
        stability: beta
  - key: HOST
    description: Host detector.
    attributes:
      - id: host.id
      - id: host.name
    stability: alpha
    support: community
    dependencies:
      - name: Host Resource Detectors
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Host
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.Host
        version: 1.12.0-beta.1
        stability: beta
  - key: OPERATINGSYSTEM
    description: Operating System detector.
    attributes:
      - id: os.type
      - id: os.build_id
      - id: os.description
      - id: os.name
      - id: os.version
    stability: beta
    support: community
    dependencies:
      - name: Operating System Detectors
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/blob/main/src/OpenTelemetry.Resources.OperatingSystem
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.OperatingSystem
        version: 1.12.0-beta.1
        stability: beta
  - key: PROCESS
    description: Process detector.
    attributes:
      - id: process.owner
      - id: process.pid
    stability: alpha
    support: community
    dependencies:
      - name: Process Resource Detectors
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.Process
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.Process
        version: 1.12.0-beta.1
        stability: beta
  - key: PROCESSRUNTIME
    description: Process Runtime detector.
    attributes:
      - id: process.runtime.description
      - id: process.runtime.name
      - id: process.runtime.version
    stability: alpha
    support: community
    dependencies:
      - name: Process Runtime Resource Detectors
        source_href: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Resources.ProcessRuntime
        package_href: https://www.nuget.org/packages/OpenTelemetry.Resources.ProcessRuntime
        version: 1.12.0-beta.1
        stability: beta
