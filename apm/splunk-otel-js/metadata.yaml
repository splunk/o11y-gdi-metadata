component: "Splunk Distribution of OpenTelemetry JavaScript"
version: "4.0.0"
settings:
  - env: "OTEL_BSP_SCHEDULE_DELAY"
    property: ""
    description: "The delay in milliseconds between 2 consecutive bath span processor exports."
    default: "5000"
    type: "number"
    category: "instrumentation"
  - env: "OTEL_EXPORTER_OTLP_CERTIFICATE"
    property: ""
    description: "Path to a certificate to use when verifying a server's TLS credentials."
    default: ""
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE"
    property: ""
    description: "Path to a certificate to use when verifying a client's TLS credentials."
    default: ""
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_CLIENT_KEY"
    property: ""
    description: "Path to client's private key to use in mTLS communication in PEM format."
    default: ""
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_ENDPOINT"
    property: "endpoint"
    description: "The OTLP endpoint to export to."
    default: "http://localhost:4318"
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_TRACES_PROTOCOL"
    property: ""
    description: "Chooses the trace exporter protocol. Allowed values are grpc and http/protobuf"
    default: "http/protobuf"
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_METRICS_PROTOCOL"
    property: "metrics.metricReaderFactory"
    description: "Chooses the metric exporter protocol. Allowed values are grpc and http/protobuf"
    default: "http/protobuf"
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_PROTOCOL"
    property: ""
    description: "The protocol to use for OTLP exports."
    default: "http/protobuf"
    type: "string"
    category: "exporter"
  - env: "OTEL_EXPORTER_OTLP_TRACES_ENDPOINT"
    property: ""
    description: "The traces OTLP endpoint to export to."
    default: "http://localhost:4318"
    type: "string"
    category: "exporter"
  - env: "OTEL_INSTRUMENTATION_COMMON_DEFAULT_ENABLED"
    property: ""
    description: "Whether to activate all the embedded instrumentations. When you set this setting to false, use OTEL_INSTRUMENTATION_<NAME>_ENABLED=true to selectively turn on instrumentations."
    default: "true"
    type: "boolean"
    category: "instrumentation"
  - env: "OTEL_INSTRUMENTATION_<NAME>_ENABLED"
    property: ""
    description: "When set to true, this setting activates a specific instrumentation, as defined by replacing <NAME> with the name of the instrumentation. The name is not case sensitive."
    default: "true"
    type: "boolean"
    category: "instrumentation"
  - env: "OTEL_LOG_LEVEL"
    property: "logLevel"
    description: "Log level for the OpenTelemetry diagnostic console logger. To activate debug logging, set the debug value. Available values are error, info, debug, and verbose."
    default: "none"
    type: "string"
    category: "general"
  - env: "OTEL_EXPORTER_OTLP_METRICS_ENDPOINT"
    property: "metrics.endpoint"
    description: "The metrics endpoint. Takes precedence over the value set in OTEL_EXPORTER_OTLP_ENDPOINT."
    default: "https://ingest.<realm>.signalfx.com/v2/datapoint/otlp"
    type: "number"
    category: "metrics"
  - env: "OTEL_METRIC_EXPORT_INTERVAL"
    property: "metrics.exportIntervalMillis"
    description: "The interval, in milliseconds, of metrics collection and exporting."
    default: "30000"
    type: "number"
    category: "metrics"
  - env: "OTEL_METRICS_EXPORTER"
    property: "metrics.metricReaderFactory"
    description: "Comma-separated list of metrics exporter to use. To output to the console, set the variable to console. If set to none, metric exports are turned off."
    default: "otlp"
    type: "string"
    category: "exporter"
  - env: "OTEL_PROPAGATORS"
    property: "tracing.propagators"
    description: "Comma-separated list of propagators you want to use."
    default: "tracecontext,baggage"
    type: "string"
    category: "propagator"
  - env: "OTEL_SERVICE_NAME"
    property: "serviceName"
    description: "Name of the service or application you’re instrumenting. Takes precedence over the service name defined in the OTEL_RESOURCE_ATTRIBUTES variable."
    default: "unnamed-node-service"
    type: "string"
    category: "general"
  - env: "OTEL_TRACES_EXPORTER"
    property: "tracing.spanExporterFactory"
    description: "Comma-separated list of trace exporters to use. To output to the console, set the variable to console."
    default: "otlp"
    type: "string"
    category: "exporter"
  - env: "SPLUNK_ACCESS_TOKEN"
    property: "accessToken"
    description: "A Splunk authentication token that lets exporters send data directly to Splunk Observability Cloud. Required if you need to send data to the Splunk Observability Cloud ingest endpoint."
    default: ""
    type: "string"
    category: "general"
  - env: "SPLUNK_INSTRUMENTATION_METRICS_ENABLED"
    property: ""
    description: "Emit metrics from instrumentation (for example, http.server.duration)"
    default: "false"
    type: "boolean"
    category: "instrumentation"
  - env: "SPLUNK_METRICS_ENABLED"
    property: "Activated by calling start()"
    description: "Activates metrics collection."
    default: "false"
    type: "boolean"
    category: "metrics"
  - env: "SPLUNK_PROFILER_ENABLED"
    property: "profilingEnabled"
    description: "Activates AlwaysOn CPU profiling."
    default: "false"
    type: "boolean"
    category: "profiler"
  - env: "SPLUNK_PROFILER_LOGS_ENDPOINT"
    property: "profiling.endpoint"
    description: "The collector endpoint for profiler logs."
    default: "http://localhost:4318"
    type: "string"
    category: "profiler"
  - env: "SPLUNK_PROFILER_MEMORY_ENABLED"
    property: "profiling.memoryProfilingEnabled"
    description: "Activates memory profiling for AlwaysOn Profiling."
    default: "false"
    type: "string"
    category: "profiler"
  - env: "SPLUNK_PROFILER_CALL_STACK_INTERVAL"
    property: "profiling.callstackInterval"
    description: "Frequency with which call stacks are sampled, in milliseconds."
    default: "1000"
    type: "number"
    category: "profiler"
  - env: "SPLUNK_REALM"
    property: "realm"
    description: "The name of your organization’s realm, for example, us0. When you set the realm, telemetry is sent directly to the ingest endpoint of Splunk Observability Cloud, bypassing the Splunk Distribution of OpenTelemetry Collector."
    default: ""
    type: "string"
    category: "general"
  - env: "SPLUNK_REDIS_INCLUDE_COMMAND_ARGS"
    property: ""
    description: "Whether to include the full Redis query in db.statement span attributes when using the Redis instrumentation."
    default: "false"
    type: "boolean"
    category: "instrumentation"
  - env: "SPLUNK_GRAPHQL_RESOLVE_SPANS_ENABLED"
    property: ""
    description: "Starting from version 2.7.0 of the instrumentation, GraphQL spans for resolvers are no longer generated. To collect resolve spans, set this environment variable to true. The default value is false."
    default: "false"
    type: "boolean"
    category: "instrumentation"
  - env: "SPLUNK_RUNTIME_METRICS_COLLECTION_INTERVAL"
    property: "metrics.runtimeMetricsCollectionIntervalMillis"
    description: "The interval, in milliseconds, during which GC and event loop statistics are collected."
    default: "5000"
    type: "number"
    category: "metrics"
  - env: "SPLUNK_RUNTIME_METRICS_ENABLED"
    property: "metrics.runtimeMetricsEnabled"
    description: "Activates the collection and export of runtime metrics. Runtime metrics are only sent if the SPLUNK_METRICS_ENABLED environment variable is set to true or if memory profiling is activated."
    default: "true"
    type: "boolean"
    category: "metrics"
  - env: "SPLUNK_DEBUG_METRICS_ENABLED"
    property: "metrics.debugMetricsEnabled"
    description: "Activates the collection and export of internal debug metrics for troubleshooting. Debug metrics are only sent if the SPLUNK_METRICS_ENABLED environment variable is set to true."
    default: "true"
    type: "boolean"
    category: "metrics"
  - env: "SPLUNK_TRACE_RESPONSE_HEADER_ENABLED"
    property: "tracing.serverTimingEnabled"
    description: "Activates the addition of server trace information to HTTP response headers."
    default: "true"
    type: "boolean"
    category: "general"
  - env: "SPLUNK_TRACING_ENABLED"
    property: ""
    description: "Enables tracing."
    default: "true"
    type: "boolean"
    category: "instrumentation"
instrumentations:
  - keys:
      - "@splunk/otel"
    instrumented_components:
      - name: "node.js runtime"
        supported_versions: "See general requirements"
    support: "community"
    signals:
      - metrics:
          - metric_name: "process.runtime.nodejs.event_loop.lag.max"
            instrument: "histogram"
            description: "Maximum duration of event loop lag"
          - metric_name: "process.runtime.nodejs.event_loop.lag.min"
            instrument: "histogram"
            description: "Minimum duration of event loop lag"
          - metric_name: "process.runtime.nodejs.memory.gc.count"
            instrument: "counter"
            description: "Garbage collection pause count"
          - metric_name: "process.runtime.nodejs.memory.gc.pause"
            instrument: "counter"
            description: "Garbage collection total time"
          - metric_name: "process.runtime.nodejs.memory.gc.size"
            instrument: "counter"
            description: "Gabrage collection size"
          - metric_name: "process.runtime.nodejs.memory.heap.total"
            instrument: "histogram"
            description: "V8's total memory usage"
          - metric_name: "process.runtime.nodejs.memory.heap.used"
            instrument: "histogram"
            description: "V8's used memory"
          - metric_name: "process.runtime.nodejs.memory.rss"
            instrument: "histogram"
            description: "Process' Resident Set Size"
  - keys:
      - "@opentelemetry/instrumentation-amqplib"
    instrumented_components:
      - name: "amqplib"
        supported_versions: "[amqplib](https://www.npmjs.com/package/amqplib) versions >=0.5.5 <1"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-aws-sdk"
    instrumented_components:
      - name: "aws-sdk and @aws-sdk"
        supported_versions: "2.x,3.x"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-bunyan"
    instrumented_components:
      - name: "bunyan"
        supported_versions: "[bunyan](https://www.npmjs.com/package/bunyan) versions >=1.0.0 <2"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-cassandra-driver"
    instrumented_components:
      - name: "cassandra-driver"
        supported_versions: "[cassandra-driver](https://www.npmjs.com/package/cassandra-driver) versions >=4.4.0 <5"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-connect"
    instrumented_components:
      - name: "connect"
        supported_versions: "[connect](https://www.npmjs.com/package/connect) versions >=3.0.0 <4"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-dataloader"
    instrumented_components:
      - name: "dataloader"
        supported_versions: "[dataloader](https://www.npmjs.com/package/dataloader) versions >=2.0.0 <3"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-dns"
    instrumented_components:
      - name: "dns"
        supported_versions: "*"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-express"
    instrumented_components:
      - name: "express"
        supported_versions: "[express](https://www.npmjs.com/package/express) version >=4.0.0 <5"
    support: "community"
  - keys:
      - "@fastify/otel"
    instrumented_components:
      - name: "fastify"
        supported_versions: ">=4.0.0 <6"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-generic-pool"
    instrumented_components:
      - name: "generic-pool"
        supported_versions: "[generic-pool](https://www.npmjs.com/package/generic-pool) version >=2.0.0 <4"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-graphql"
    instrumented_components:
      - name: "graphql"
        supported_versions: "[graphql](https://www.npmjs.com/package/graphql) versions >=14.0.0 <17"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-grpc"
    instrumented_components:
      - name: "@grpc/grpc-js"
        supported_versions: "1.x"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-hapi"
    instrumented_components:
      - name: "hapi"
        supported_versions: "[@hapi/hapi](https://www.npmjs.com/package/@hapi/hapi) versions >=17.0.0 <22"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-http"
    instrumented_components:
      - name: "http"
        supported_versions: "*"
    support: "community"
    signals:
      - metrics:
          - metric_name: "http.server.duration"
            instrument: "histogram"
            description: "Measures the duration of inbound HTTP requests."
          - metric_name: "http.client.duration"
            instrument: "histogram"
            description: "Duration of HTTP client requests."
  - keys:
      - "@opentelemetry/instrumentation-ioredis"
    instrumented_components:
      - name: "ioredis"
        supported_versions: "[ioredis](https://www.npmjs.com/package/ioredis) versions >=2.0.0 <6"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-kafkajs"
    instrumented_components:
      - name: "kafkajs"
        supported_versions: "[kafkajs](https://www.npmjs.com/package/kafkajs) versions >=0.3.0 <3"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-knex"
    instrumented_components:
      - name: "knex"
        supported_versions: "[knex](https://www.npmjs.com/package/knex) versions >=0.10.0 <4"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-koa"
    instrumented_components:
      - name: "koa"
        supported_versions: "[koa](https://www.npmjs.com/package/koa) versions >=2.0.0 <3,[@koa/router](https://www.npmjs.com/package/@koa/router) versions >=8.0.0"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-lru-memoizer"
    instrumented_components:
      - name: "lru-memoizer"
        supported_versions: ">=1.3 <3"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-memcached"
    instrumented_components:
      - name: "memcached"
        supported_versions: "[memcached](https://www.npmjs.com/package/memcached) versions >=2.2.0 <3"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-mongodb"
    instrumented_components:
      - name: "mongodb"
        supported_versions: "[mongodb](https://www.npmjs.com/package/mongodb) version >=3.3.0 <7"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-mongoose"
    instrumented_components:
      - name: "mongoose"
        supported_versions: "[mongoose](https://www.npmjs.com/package/mongoose) versions >=5.9.7 <9"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-mysql"
    instrumented_components:
      - name: "mysql"
        supported_versions: "[mysql](https://www.npmjs.com/package/mysql) versions >=2.0.0 <3"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-mysql2"
    instrumented_components:
      - name: "mysql2"
        supported_versions: "[mysql2](https://www.npmjs.com/package/mysql2) versions >=1.4.2 <4"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-nestjs-core"
    instrumented_components:
      - name: "@nestjs/core"
        supported_versions: "[@nestjs/core](https://www.npmjs.com/package/@nestjs/core) versions >=4.0.0 <12"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-net"
    instrumented_components:
      - name: "net"
        supported_versions: "*"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-pg"
    instrumented_components:
      - name: "pg"
        supported_versions: "[pg](https://www.npmjs.com/package/pg) versions >=8.0.3 <9,[pg-pool](https://www.npmjs.com/package/pg-pool) versions >=2.0.0 <4"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-pino"
    instrumented_components:
      - name: "pino"
        supported_versions: "[pino](https://www.npmjs.com/package/pino) versions >=5.14.0 <10,  the \"log sending\" feature is only supported in pino v7 and later."
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-redis"
    instrumented_components:
      - name: "redis"
        supported_versions: "^2.6.0,3.x"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-restify"
    instrumented_components:
      - name: "restify"
        supported_versions: "[restify](https://www.npmjs.com/package/restify) versions >=4.1.0 <12"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-router"
    instrumented_components:
      - name: "router"
        supported_versions: "[router](https://www.npmjs.com/package/router) versions >=1.0.0 <2"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-socket.io"
    instrumented_components:
      - name: "socket.io"
        supported_versions: ">=2 <5"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-tedious"
    instrumented_components:
      - name: "tedious"
        supported_versions: "[tedious](https://www.npmjs.com/package/tedious) >=1.11.0 <20"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-undici"
    instrumented_components:
      - name: "undici"
        supported_versions: ">=5.12.0"
    support: "community"
  - keys:
      - "@opentelemetry/instrumentation-winston"
    instrumented_components:
      - name: "winston"
        supported_versions: "[winston](https://www.npmjs.com/package/winston) versions >=1.0.0 <4,log sending: [winston](https://www.npmjs.com/package/winston) versions >=3.0.0 <4"
    support: "community"
  - keys:
      - "splunk-opentelemetry-instrumentation-elasticsearch"
    instrumented_components:
      - name: "@elastic/elasticsearch"
        supported_versions: ">=5 <8"
    support: "supported"
  - keys:
      - "splunk-opentelemetry-instrumentation-sequelize"
    instrumented_components:
      - name: "sequelize"
        supported_versions: "*"
    support: "supported"
  - keys:
      - "splunk-opentelemetry-instrumentation-typeorm"
    instrumented_components:
      - name: "typeorm"
        supported_versions: undefined
    support: "supported"
  - keys:
      - "splunk-opentelemetry-instrumentation-neo4j"
    instrumented_components:
      - name: "neo4j"
        supported_versions: ">=4.0.0 <6"
    support: "supported"
  - keys:
      - "splunk-opentelemetry-instrumentation-nocode"
    instrumented_components:
      - name: "nocode"
        supported_versions: "*"
    support: "supported"
resource_detectors:
  - key: "PROCESS"
    description: "Process info detector"
    attributes:
      - id: "process.pid"
      - id: "process.executable.path"
      - id: "process.runtime.version"
      - id: "process.runtime.name"
    support: "supported"
  - key: "OS"
    description: "Operating system detector"
    attributes:
      - id: "os.type"
      - id: "os.description"
    support: "supported"
  - key: "HOST"
    description: "Host detector"
    attributes:
      - id: "host.name"
      - id: "host.arch"
    support: "supported"
  - key: "CONTAINER"
    description: "Container ID detector"
    attributes:
      - id: "container.id"
    support: "supported"
  - key: "DISTRO"
    description: "Distribution version detector"
    attributes:
      - id: "splunk.distro.version"
    support: "supported"
dependencies:
  - name: "@fastify/otel"
    version: "0.9.4"
    stability: "stable"
    source_href: "https://github.com/fastify/otel#readme"
  - name: "@grpc/grpc-js"
    version: "^1.13.4"
    stability: "stable"
    source_href: "https://grpc.io/"
  - name: "@opentelemetry/api"
    version: "^1.9.0"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/api"
  - name: "@opentelemetry/api-logs"
    version: "^0.203.0"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/api-logs"
  - name: "@opentelemetry/context-async-hooks"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-context-async-hooks"
  - name: "@opentelemetry/core"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core"
  - name: "@opentelemetry/exporter-logs-otlp-http"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-logs-otlp-http"
  - name: "@opentelemetry/exporter-logs-otlp-proto"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-logs-otlp-proto"
  - name: "@opentelemetry/exporter-metrics-otlp-grpc"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-metrics-otlp-grpc"
  - name: "@opentelemetry/exporter-metrics-otlp-proto"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-metrics-otlp-proto"
  - name: "@opentelemetry/exporter-trace-otlp-grpc"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-grpc"
  - name: "@opentelemetry/exporter-trace-otlp-proto"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-proto"
  - name: "@opentelemetry/instrumentation"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation"
  - name: "@opentelemetry/instrumentation-amqplib"
    version: "0.50.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-amqplib#readme"
  - name: "@opentelemetry/instrumentation-aws-sdk"
    version: "0.56.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-aws-sdk#readme"
  - name: "@opentelemetry/instrumentation-bunyan"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-bunyan#readme"
  - name: "@opentelemetry/instrumentation-cassandra-driver"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-cassandra-driver#readme"
  - name: "@opentelemetry/instrumentation-connect"
    version: "0.47.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-connect#readme"
  - name: "@opentelemetry/instrumentation-dataloader"
    version: "0.21.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-dataloader#readme"
  - name: "@opentelemetry/instrumentation-dns"
    version: "0.47.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-dns#readme"
  - name: "@opentelemetry/instrumentation-express"
    version: "0.52.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-express#readme"
  - name: "@opentelemetry/instrumentation-generic-pool"
    version: "0.47.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-generic-pool#readme"
  - name: "@opentelemetry/instrumentation-graphql"
    version: "0.51.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-graphql#readme"
  - name: "@opentelemetry/instrumentation-grpc"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-grpc"
  - name: "@opentelemetry/instrumentation-hapi"
    version: "0.50.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-hapi#readme"
  - name: "@opentelemetry/instrumentation-http"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-instrumentation-http"
  - name: "@opentelemetry/instrumentation-ioredis"
    version: "0.51.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-ioredis#readme"
  - name: "@opentelemetry/instrumentation-kafkajs"
    version: "0.12.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-kafkajs#readme"
  - name: "@opentelemetry/instrumentation-knex"
    version: "0.48.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-knex#readme"
  - name: "@opentelemetry/instrumentation-koa"
    version: "0.51.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-koa#readme"
  - name: "@opentelemetry/instrumentation-lru-memoizer"
    version: "0.48.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-lru-memoizer#readme"
  - name: "@opentelemetry/instrumentation-memcached"
    version: "0.47.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-memcached#readme"
  - name: "@opentelemetry/instrumentation-mongodb"
    version: "0.56.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-mongodb#readme"
  - name: "@opentelemetry/instrumentation-mongoose"
    version: "0.50.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-mongoose#readme"
  - name: "@opentelemetry/instrumentation-mysql"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-mysql#readme"
  - name: "@opentelemetry/instrumentation-mysql2"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-mysql2#readme"
  - name: "@opentelemetry/instrumentation-nestjs-core"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-nestjs-core#readme"
  - name: "@opentelemetry/instrumentation-net"
    version: "0.47.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-net#readme"
  - name: "@opentelemetry/instrumentation-openai"
    version: "0.0.1"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-openai#readme"
  - name: "@opentelemetry/instrumentation-oracledb"
    version: "0.29.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-oracledb#readme"
  - name: "@opentelemetry/instrumentation-pg"
    version: "0.55.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-pg#readme"
  - name: "@opentelemetry/instrumentation-pino"
    version: "0.50.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-pino#readme"
  - name: "@opentelemetry/instrumentation-redis"
    version: "0.51.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-redis#readme"
  - name: "@opentelemetry/instrumentation-restify"
    version: "0.49.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-restify#readme"
  - name: "@opentelemetry/instrumentation-router"
    version: "0.48.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-router#readme"
  - name: "@opentelemetry/instrumentation-socket.io"
    version: "0.50.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-socket.io#readme"
  - name: "@opentelemetry/instrumentation-tedious"
    version: "0.22.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-tedious#readme"
  - name: "@opentelemetry/instrumentation-typeorm"
    version: "0.4.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-typeorm#readme"
  - name: "@opentelemetry/instrumentation-undici"
    version: "0.14.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-undici#readme"
  - name: "@opentelemetry/instrumentation-winston"
    version: "0.48.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/instrumentation-winston#readme"
  - name: "@opentelemetry/propagator-aws-xray"
    version: "2.1.0"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/propagators/propagator-aws-xray#readme"
  - name: "@opentelemetry/propagator-b3"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3"
  - name: "@opentelemetry/resource-detector-container"
    version: "0.7.3"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/resource-detector-container#readme"
  - name: "@opentelemetry/resources"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-resources"
  - name: "@opentelemetry/sdk-logs"
    version: "0.203.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/sdk-logs"
  - name: "@opentelemetry/sdk-metrics"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/sdk-metrics"
  - name: "@opentelemetry/sdk-trace-base"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-base"
  - name: "@opentelemetry/sdk-trace-node"
    version: "2.0.1"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-sdk-trace-node"
  - name: "@opentelemetry/semantic-conventions"
    version: "1.36.0"
    stability: "stable"
    source_href: "https://github.com/open-telemetry/opentelemetry-js/tree/main/semantic-conventions"
  - name: "@opentelemetry/winston-transport"
    version: "0.14.0"
    stability: "experimental"
    source_href: "https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/winston-transport#readme"
  - name: "is-promise"
    version: "^4.0.0"
    stability: "stable"
  - name: "nan"
    version: "^2.22.2"
    stability: "stable"
  - name: "node-gyp-build"
    version: "^4.8.4"
    stability: "stable"
    source_href: "https://github.com/prebuild/node-gyp-build"
  - name: "protobufjs"
    version: "^7.5.3"
    stability: "stable"
    source_href: "https://protobufjs.github.io/protobuf.js/"
  - name: "semver"
    version: "^7.7.2"
    stability: "stable"
